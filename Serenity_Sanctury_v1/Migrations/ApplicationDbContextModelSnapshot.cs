// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Serenity_Sanctury_v1.Data;

#nullable disable

namespace Serenity_Sanctury_v1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Streetline")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Callaghan",
                            Country = "Australia",
                            PostalCode = "2308",
                            State = "NSW",
                            Streetline = "221 Ring Road"
                        });
                });

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.Admin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "administrator@example.com",
                            FirstName = "Admin",
                            FullName = "Admin Istrator",
                            LastName = "Istrator",
                            Password = "Pa$$w0rd"
                        });
                });

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderID");

                    b.HasIndex("AddressID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            AddressID = 1,
                            CustomerID = 1,
                            OrderDate = new DateTime(2024, 7, 26, 13, 8, 26, 414, DateTimeKind.Local).AddTicks(6878),
                            OrderStatus = 0,
                            TotalPrice = 35.98m
                        });
                });

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.OrderTracking", b =>
                {
                    b.Property<int>("TrackingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrackingID"));

                    b.Property<string>("OrderEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("StatusUpdate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("TrackingID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderTrackings");

                    b.HasData(
                        new
                        {
                            TrackingID = 1,
                            OrderEmail = "customer@example.com",
                            OrderID = 1,
                            PostalCode = "2308",
                            StatusUpdate = "Order placed",
                            UpdateTime = new DateTime(2024, 7, 26, 5, 8, 26, 414, DateTimeKind.Utc).AddTicks(6920)
                        });
                });

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("BurnTime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Container")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Scent")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            BurnTime = "48 hours",
                            Category = 0,
                            Container = "Black color Glass Jar",
                            Description = "A soothing candle for relaxation.",
                            ImageUrl = "~/Image/product2.jpeg",
                            Price = 10.00m,
                            ProductName = "Honeyed Harmony",
                            Quantity = 100,
                            Scent = "Honey and Vanilla",
                            Size = "8 oz"
                        },
                        new
                        {
                            ProductID = 2,
                            BurnTime = "40 hours",
                            Category = 0,
                            Container = "Transparent Glass Jar",
                            Description = "A tranquil candle with a refreshing floral scent, perfect for creating a peaceful atmosphere.",
                            ImageUrl = "~/Image/product3.jpeg",
                            Price = 12.99m,
                            ProductName = "Serenity Blossom",
                            Quantity = 150,
                            Scent = "Cherry Blossom",
                            Size = "10 oz"
                        },
                        new
                        {
                            ProductID = 3,
                            Category = 1,
                            Container = "Black Glass Bottle",
                            Description = "Premium sandalwood essential oil for a calming and aromatic experience.",
                            ImageUrl = "~/Image/product4.jpeg",
                            Price = 9.99m,
                            ProductName = "Soothing Sandalwood Essence",
                            Quantity = 120,
                            Scent = "Sandalwood",
                            Size = "30 ml"
                        },
                        new
                        {
                            ProductID = 4,
                            Category = 1,
                            Container = "Black Glass Bottle",
                            Description = "Pure tea tree essential oil known for its refreshing and invigorating properties.",
                            ImageUrl = "~/Image/product4.jpeg",
                            Price = 9.99m,
                            ProductName = "Invigorating Tea Tree",
                            Quantity = 150,
                            Scent = "Tea Tree",
                            Size = "30 ml"
                        },
                        new
                        {
                            ProductID = 5,
                            BurnTime = "50 hours",
                            Category = 0,
                            Container = "Black Glass Jar",
                            Description = "A soothing candle that brings a sense of calm and tranquility, perfect for your twilight hours.",
                            ImageUrl = "~/Image/product2.jpeg",
                            Price = 10.99m,
                            ProductName = "Tranquil Twilight",
                            Quantity = 100,
                            Scent = "Lavender and Chamomile",
                            Size = "12 oz"
                        },
                        new
                        {
                            ProductID = 6,
                            BurnTime = "40 hours",
                            Category = 0,
                            Container = "Transparent Glass Jar",
                            Description = "A calming candle infused with the soothing scent of lavender, perfect for creating a relaxing ambiance.",
                            ImageUrl = "~/Image/product3.jpeg",
                            Price = 12.99m,
                            ProductName = "Lavender Dreams",
                            Quantity = 75,
                            Scent = "Lavender",
                            Size = "8 oz"
                        },
                        new
                        {
                            ProductID = 7,
                            BurnTime = "45 hours",
                            Category = 0,
                            Container = "Transparent Glass Jar",
                            Description = "A luxurious candle with the delicate and romantic scent of rose petals, ideal for creating a serene atmosphere.",
                            ImageUrl = "~/Image/product3.jpeg",
                            Price = 12.99m,
                            ProductName = "Rose Petal Oasis",
                            Quantity = 80,
                            Scent = "Rose Petals",
                            Size = "8 oz"
                        },
                        new
                        {
                            ProductID = 8,
                            BurnTime = "40 hours",
                            Category = 0,
                            Container = "Black Glass Jar",
                            Description = "A vibrant candle with an invigorating citrus scent that brightens up any room and lifts your spirits.",
                            ImageUrl = "~/Image/product2.jpeg",
                            Price = 10.99m,
                            ProductName = "Citrus Sunrise",
                            Quantity = 90,
                            Scent = "Citrus Blend",
                            Size = "8 oz"
                        },
                        new
                        {
                            ProductID = 9,
                            Category = 1,
                            Container = "Black Glass Bottle",
                            Description = "A refreshing essential oil with a zesty lemongrass scent, perfect for revitalizing your senses and uplifting your mood.",
                            ImageUrl = "~/Image/product4.jpeg",
                            Price = 12.99m,
                            ProductName = "Lemongrass Harmony",
                            Quantity = 100,
                            Scent = "Lemongrass",
                            Size = "30 ml"
                        },
                        new
                        {
                            ProductID = 10,
                            BurnTime = "40 hours",
                            Category = 0,
                            Container = "Black Glass Jar",
                            Description = "A delightful candle that combines the sweet and tangy aromas of mixed berries, creating a blissful and uplifting atmosphere.",
                            ImageUrl = "~/Image/product2.jpeg",
                            Price = 12.99m,
                            ProductName = "Berry Bliss",
                            Quantity = 120,
                            Scent = "Berry Blend",
                            Size = "8 oz"
                        },
                        new
                        {
                            ProductID = 11,
                            BurnTime = "45 hours",
                            Category = 0,
                            Container = "Transparent Glass Jar",
                            Description = "A luxurious candle that envelops you in the rich and creamy aroma of vanilla, creating a cozy and relaxing ambiance.",
                            ImageUrl = "~/Image/product3.jpeg",
                            Price = 10.99m,
                            ProductName = "Vanilla Velvet",
                            Quantity = 150,
                            Scent = "Vanilla",
                            Size = "8 oz"
                        },
                        new
                        {
                            ProductID = 12,
                            Category = 2,
                            Container = "Classic Ceramic",
                            Description = "Enhance your home with the Classic Design Aroma Diffuser.This stylish diffuser adds a calming touch to any room with soothing essential oil scents and a gentle mist.Ideal for creating a relaxing atmosphere and  a touch of elegance.",
                            DiscountedPrice = 49.99m,
                            ImageUrl = "~/Image/product5.jpeg",
                            Price = 79.99m,
                            ProductName = "Classic Design Aroma Diffuser",
                            Quantity = 50
                        });
                });

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AddressID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Birthday = new DateOnly(1998, 12, 2),
                            Email = "customer@example.com",
                            FirstName = "Cus",
                            FullName = "Cus Tomer",
                            Gender = "Male",
                            LastName = "Tomer",
                            Password = "Password1",
                            Role = "Customer"
                        },
                        new
                        {
                            ID = 2,
                            Email = "employee@example.com",
                            FirstName = "Empl",
                            FullName = "Empl Oyee",
                            Gender = "Male",
                            LastName = "Oyee",
                            Password = "Passw0rd",
                            Role = "Employee"
                        });
                });

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.Admin", b =>
                {
                    b.HasOne("Serenity_Sanctury_v1.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.Order", b =>
                {
                    b.HasOne("Serenity_Sanctury_v1.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Serenity_Sanctury_v1.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.OrderTracking", b =>
                {
                    b.HasOne("Serenity_Sanctury_v1.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Serenity_Sanctury_v1.Models.User", b =>
                {
                    b.HasOne("Serenity_Sanctury_v1.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
